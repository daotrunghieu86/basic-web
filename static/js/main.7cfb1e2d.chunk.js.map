{"version":3,"sources":["Component/About.js","Component/Home.js","Component/Contact.js","Component/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["About","className","Component","Home","Contact","Navbar","Fragment","to","href","path","exact","Wellcome","render","styled","ul","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4RAEqBA,E,iLAEjB,OACE,yBAAKC,UAAU,aACb,wCADF,yoG,GAH6BC,aCAdC,E,iLAEjB,OACE,yBAAKF,UAAU,YACb,2CACA,mvH,GAL0BC,aCAbE,E,iLAEjB,OACE,yBAAKH,UAAU,eACb,2EADF,yhD,GAH+BC,a,qGCKhBG,E,iLAEjB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,KACE,yBAAKL,UAAU,mFAEb,kBAAC,IAAD,CAAMA,UAAU,eAAeM,GAAG,KAAlC,QAIA,wBAAIN,UAAU,cACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMM,GAAG,IAAIN,UAAU,WAAWO,KAAK,KAAvC,SAIF,wBAAIP,UAAU,YACZ,kBAAC,IAAD,CAAMM,GAAG,SAASN,UAAU,WAAWO,KAAK,KAA5C,UAIF,wBAAIP,UAAU,YACZ,kBAAC,IAAD,CAAMM,GAAG,WAAWN,UAAU,WAAWO,KAAK,KAA9C,cAON,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,GACnB,kBAACC,EAAD,MACA,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOF,KAAK,UACV,kBAACE,EAAD,MACA,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOF,KAAK,YACV,kBAACE,EAAD,MACA,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOC,OAAQ,kBAAM,wD,GA9CGV,aAsDpC,SAASS,IACP,OACE,yBAAKV,UAAU,WACb,yBAAKA,UAAU,eACb,uCACA,4DAMGY,IAAOC,GAAV,KC3DOC,MARf,WACE,OACE,yBAAKd,UAAU,OACb,kBAAC,EAAD,QCIce,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAAST,OAAO,kBAAC,EAAD,MAASU,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.7cfb1e2d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wel-about\">\r\n        <h3>About Us</h3>\r\n        1. Follow the English News speak English every day with the news Watch a\r\n        recent episode of PBS Newshour now! Rise and shine, it’s time to start a\r\n        new day. Many people routinely begin the day watching the news or\r\n        reading the main headlines in a newspaper. Why not take this same\r\n        approach in English? Most of the world’s largest news organisations\r\n        offer easy access to their content online; from the BBC to the New York\r\n        Times, and countless others in-between, you can find world-class English\r\n        content for free using your computer or smartphone. At first, you may\r\n        find it difficult to understand the vocabulary words and advanced\r\n        dialogue, but you might be surprised at how quickly a little practice\r\n        makes perfect. Of course, don’t limit yourself to just the\r\n        articles—plenty of news outlets also share videos online. One great\r\n        resource is PBS NewsHour, the YouTube channel maintained by the Public\r\n        Broadcasting Service in the United States. The channel publishes their\r\n        full news broadcast every day. If you’re still feeling stuck, consider\r\n        spending five minutes or so watching the news in your native language.\r\n        This can get you familiar with the main global headlines and give you an\r\n        easy point of reference for complicated concepts or vocabulary words.\r\n        Then, watch the news in English or read a newspaper. This cuts down on\r\n        the time you need to spend flipping through the dictionary. 2. Listen to\r\n        Podcasts on Your Commute Finding a few spare minutes to speak English\r\n        every day might sound complicated, but most of us have plenty of small\r\n        gaps in our busy schedules. If you ride the bus or a train to school or\r\n        work, why not use this time to improve your listening skills? Podcasts\r\n        offer a simple way to connect with the English-speaking world. Again,\r\n        many of the world’s largest news organisations use this format to\r\n        distribute news bulletins and talk shows. Even better, many independent\r\n        publishers create podcasts on nearly every topic under the sun. Whether\r\n        you’re interested in history, entertainment, or literature, there is\r\n        bound to be a podcast you’ll enjoy. And, if you find your mind wandering\r\n        as you listen, don’t worry. Research has shown casual listening still\r\n        has an impact on language acquisition. speak english every day on your\r\n        mobile phone Trick yourself into learning English on your phone. 3.\r\n        Trick Yourself Into Learning on Your Phone Looking for an easier way to\r\n        learn English? Maximise your exposure to the language with a few simple\r\n        tricks, such as changing the default language on your phone, computer,\r\n        or tablet. This will force you to learn new English words, and since\r\n        you’re likely already comfortable using your personal electronic\r\n        devices, you won’t need to look up definitions for new phrases. If\r\n        you’re often browsing the internet, consider changing the language of\r\n        your web browser, too. Many large sites also have different versions for\r\n        users across the world. Choose the English version of a search engine\r\n        like Google to only see English results every time you look for\r\n        information. These small changes dramatically impact your comfort level\r\n        with the language. See, it’s easy to speak English every day!\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wel-home\">\r\n        <h3>Hello World</h3>\r\n        <p>\r\n          Sarah: Hi I’m Sarah. Jack: And I'm Jack. Welcome to Everyday English.\r\n          Sarah: Today we're going to be talking about a pretty important topic\r\n          – spending money! Jack: If you're going to be spending money here in\r\n          Australia, you're going to be using these: dollars. The Aussie dollar\r\n          or Australian dollar is the official Australian currency. Although\r\n          here, we just call them dollars. Sarah: The smaller unit of currency\r\n          is cents. One dollar is made up of 100 cents. Jack: One way to spend\r\n          money is using cash which in Australia comes in notes and coins. Let's\r\n          have a look at the different denominations that Australia's currency\r\n          comes in. Let's start with the coins. We've got 2 dollars, 1 dollar,\r\n          50 cents, 20 cents, 10 cents and 5 cents. Sarah: And then there are\r\n          the notes. We've got 5 dollars, 10 dollars, 20 dollars, 50 dollars and\r\n          100 dollars. Although I don't see too many of these, do you Jack?\r\n          Jack: No, I'm afraid not! Sarah: Now you can get cash out or withdraw\r\n          cash from the bank or from an ATM which stands for automatic teller\r\n          machine. Jack: But of course, it’s pretty common for people to pay\r\n          without cash using a credit card, a debit card or even your phone.\r\n          Sarah: We sometimes call that a cashless transaction or just paying by\r\n          card. Let's have a look at a scenario involving spending money. Sara:\r\n          Hi Charlotte, how are you? Charlotte: Good thanks, Sara. Sara: What\r\n          can I get for you today? Charlotte: How much are your sandwiches?\r\n          Sara: Sandwiches are 5.50. Charlotte: What about the pies? Sara: 4\r\n          dollars 60. Charlotte: Alright I’ll grab a pie and a can of lemonade.\r\n          Sara: Yeah no problem. That's just 9 dollars 80. Sara: Do you have\r\n          anything smaller? I don’t have much change. Charlotte: Sorry Sara. I\r\n          don’t have any loose change. I just went to the ATM and all I have are\r\n          50s. Do you take card? Sara: Yeah no problem. Credit or savings?\r\n          Charlotte: Credit. Sara: All good. Charlotte: Thanks so much. Have a\r\n          good day! Sara: You too! Jack: You might have noticed there that when\r\n          people talked about prices, they often dropped the words dollars and\r\n          cents. For example, instead of saying five dollars fifty cents, we\r\n          could say five fifty. Or five dollars fifty. Sarah: You have to listen\r\n          carefully to the pronunciation of numbers because sometimes, they can\r\n          sound quite similar. For example: 50 and 15. It can be hard to hear\r\n          the difference between the -ty and the -teen. There's also thirteen\r\n          and thirty, fourteen and forty, sixteen and sixty, seventeen and\r\n          seventy, eighteen and eighty and, nineteen and ninety. Jack: So we've\r\n          talked about buying smaller things with cash and cards but how about\r\n          spending money on bigger things like cars and houses? Sarah: For\r\n          bigger purchases like homes or cars, you may have to take out a loan\r\n          from the bank. Loan is a noun and it means something that is given out\r\n          temporarily, in this case money, with the expectation that it will be\r\n          given back later. The verb is lend. And the past tense of lend is\r\n          lent. If you take out a loan, you become a borrower. You borrow the\r\n          bank's money. And you have to repay it or make repayments. A loan\r\n          that's for a house is called a home loan or a mortgage. Jack: If you\r\n          take out a loan, you will have to pay interest. That means the amount\r\n          of money you owe will increase by a certain percentage. Sarah:\r\n          Percentage is a unit of measurement that means a part of 100. So, for\r\n          example 50 per cent means half. Jack: On a home loan you might have to\r\n          pay 5% interest which means the amount you owe will increase by 5%\r\n          every year. Banks will also charge interest on credit cards which let\r\n          you spend money that you don't actually have as long as you pay it\r\n          back later! Sarah: Let's have a look at some more words that are\r\n          associated with spending. There's buy. The past tense is bought.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wel-contact\">\r\n        <h3>I want to learn everything about computers.</h3>\r\n        Hello. I'm a guy in Tennessee. My name is Tyler. I want to learn\r\n        everything about computers. Well I have a big problem. I don't have even\r\n        the most remote elementary knowledge about technology or computers in\r\n        general. My question isn't simple and I've googled plenty of times, but\r\n        it is hard to find answers to questions if you can't find the questions\r\n        being answered. I was wondering: What is the first step in learning\r\n        about computers? Specifically what TYPES of things does one learn? I\r\n        know there's PC hardware handling people learn, and then there's\r\n        something my friend called \"networking\", and then there's coding and\r\n        programming and scripting and I don't even know what those are or if\r\n        there's even a difference between them. Basically what I'm saying is\r\n        this: I am a blank canvas, and I don't know what color to start painting\r\n        in. Whenever I do google searches or try to find information about first\r\n        steps I am FLOODED with terms and ideas that I don't understand at all.\r\n        And then flipping through wikipedia pages looking at computer and\r\n        programming related pages further baffles my already elementary mind.\r\n        Where do I start? Should I jump into \"coding\"? Should I fetch some\r\n        crappy computer pieces and start building computers? What about\r\n        networking? How do I go about even finding information about it?\r\n        Everything I find seems to be for people who already know about\r\n        networking and what they're doing. What other things do people even do\r\n        with computers other than build them, program programs, set up networks\r\n        so they can talk to each other?\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport About from \"./About\";\r\nimport Home from \"./Home\";\r\nimport Contact from \"./Contact\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default class Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Router>\r\n          <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark d-flex justify-content-between px-5\">\r\n            {/* <a className=\"navbar-brand text-white\" href=\"#\"> */}\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n              Logo\r\n            </Link>\r\n\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\" href=\"#\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/about\" className=\"nav-link\" href=\"#\">\r\n                  About\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/contact\" className=\"nav-link\" href=\"#\">\r\n                  Contact\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Wellcome />\r\n              <Home />\r\n            </Route>\r\n\r\n            <Route path=\"/about\">\r\n              <Wellcome />\r\n              <About />\r\n            </Route>\r\n\r\n            <Route path=\"/contact\">\r\n              <Wellcome />\r\n              <Contact />\r\n            </Route>\r\n            \r\n            <Route render={() => <h1>Page not found</h1>} />\r\n          </Switch>\r\n        </Router>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Wellcome() {\r\n  return (\r\n    <div className=\"welcome\">\r\n      <div className=\"wel-content\">\r\n        <h3>Welcome</h3>\r\n        <p>Learn to code from the word</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n`;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Navbar from \"./Component/Navbar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}